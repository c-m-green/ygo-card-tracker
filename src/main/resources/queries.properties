create_card_info_table_statement=CREATE TABLE IF NOT EXISTS card_info (id int NOT NULL AUTO_INCREMENT, passcode int NOT NULL UNIQUE, name tinytext NOT NULL, description text, card_type tinyint, variant tinyint, attribute tinytext, attack int, defense int, level tinyint, scale tinyint, link_value smallint, link_markers tinytext, set_code_id int NOT NULL, image text, image_small text, is_fake bool, PRIMARY KEY (id), FOREIGN KEY (set_code_id) REFERENCES set_code(id))
create_deck_table_statement=CREATE TABLE IF NOT EXISTS deck (id int NOT NULL AUTO_INCREMENT, name tinytext, note text, PRIMARY KEY (id))
insert_default_deck_statement=INSERT INTO deck (name, note) VALUES ('No deck', NULL)
create_my_card_collection_table_statement=CREATE TABLE IF NOT EXISTS card (id int NOT NULL AUTO_INCREMENT, card_info_id int NOT NULL, deck_id int NOT NULL, group_id int NOT NULL, set_code tinytext, in_side_deck bool, is_virtual bool, PRIMARY KEY (id), FOREIGN KEY (card_info_id) REFERENCES card_info(id), FOREIGN KEY (deck_id) REFERENCES deck(id), FOREIGN KEY (group_id) REFERENCES card_group(id))
create_set_code_table_statement=CREATE TABLE IF NOT EXISTS set_code (id int NOT NULL AUTO_INCREMENT, set_codes text NOT NULL, PRIMARY KEY (id))
select_card_info_table_query=SELECT ci.id, ci.passcode, ci.name, ci.description, ci.card_type, ci.variant, ci.attribute, ci.attack, ci.defense, ci.level, ci.scale, ci.link_value, ci.link_markers, sc.set_codes, ci.image, ci.image_small, ci.is_fake FROM card_info AS ci INNER JOIN set_code AS sc ON ci.set_code_id=sc.id
insert_into_card_info_table_statement=INSERT INTO card_info (passcode, name, description, card_type, variant, attribute, attack, defense, level, scale, link_value, link_markers, set_code_id, image, image_small, is_fake) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
delete_from_card_info_table_statement=DELETE FROM card_info WHERE id = ?
select_card_info_by_name_query=SELECT ci.id, ci.passcode, ci.name, ci.description, ci.card_type, ci.variant, ci.attribute, ci.attack, ci.defense, ci.level, ci.scale, ci.link_value, ci.link_markers, sc.set_codes, ci.image, ci.image_small, ci.is_fake FROM card_info AS ci INNER JOIN set_code AS sc ON ci.set_code_id=sc.id WHERE ci.name = ?
select_card_info_by_passcode_query=SELECT ci.id, ci.passcode, ci.name, ci.description, ci.card_type, ci.variant, ci.attribute, ci.attack, ci.defense, ci.level, ci.scale, ci.link_value, ci.link_markers, sc.set_codes, ci.image, ci.image_small, ci.is_fake FROM card_info AS ci INNER JOIN set_code AS sc ON ci.set_code_id=sc.id WHERE ci.passcode = ?
select_card_info_by_id_query=SELECT ci.id, ci.passcode, ci.name, ci.description, ci.card_type, ci.variant, ci.attribute, ci.attack, ci.defense, ci.level, ci.scale, ci.link_value, ci.link_markers, sc.set_codes, ci.image, ci.image_small, ci.is_fake FROM card_info AS ci INNER JOIN set_code AS sc ON ci.set_code_id=sc.id WHERE ci.id = ?
select_card_table_query=SELECT * FROM card
select_card_by_passcode_query=SELECT * FROM card WHERE card_info_id = (SELECT id FROM card_info WHERE passcode = ?)
insert_into_card_table_statement=INSERT INTO card (card_info_id, deck_id, group_id, set_code, in_side_deck, is_virtual) VALUES (?, ?, ?, ?, ?, ?)
insert_into_card_table_by_passcode_statement=INSERT INTO card (card_info_id, deck_id, group_id, set_code, in_side_deck, is_virtual) VALUES ((SELECT id FROM card_info WHERE passcode = ?), ?, ?, ?, ?, ?)
delete_from_card_table_statement=DELETE FROM card WHERE id = ?
select_deck_table_query=SELECT * FROM deck
select_count_card_info_by_name_query=SELECT count(*) AS num_rows FROM card_info WHERE name = ?
select_count_card_info_by_passcode_query=SELECT count(*) AS num_rows FROM card_info WHERE passcode = ?
update_card_info_passcode=UPDATE card_info SET passcode = ? WHERE id = ?
update_card_info_set_codes=UPDATE card_info SET set_code_id = ? WHERE id = ?
delete_from_deck_table_statement=DELETE FROM deck WHERE id = ?
insert_into_deck_table_statement=INSERT INTO deck (name, note) VALUES (?, ?)
select_card_by_deck_query=SELECT * FROM card WHERE deck_id = ? and in_side_deck = ?
update_card_deck_id_statement=UPDATE card SET deck_id = ? WHERE id = ?
update_card_side_deck_statement=UPDATE card SET in_side_deck = ? WHERE id = ?
select_set_code_table_query=SELECT * FROM set_code
select_set_code_by_id_query=SELECT set_codes FROM set_code WHERE id = ?
insert_into_set_code_table_statement=INSERT INTO set_code (set_codes) VALUES (?)
update_set_code_table_statement=UPDATE set_code SET set_codes = ? WHERE id = ?
select_cards_for_export_query=SELECT ci.passcode, ci.name, c.set_code, c.deck_id FROM card_info AS ci INNER JOIN card AS c ON ci.id=c.card_info_id WHERE ci.is_fake = False
select_set_codes_for_export_query=SELECT set_code FROM card INNER JOIN card_info ON card.card_info_id=card_info.id WHERE is_fake = False
create_group_table_statement=CREATE TABLE IF NOT EXISTS card_group (id int NOT NULL AUTO_INCREMENT, name tinytext NOT NULL, PRIMARY KEY (id))
insert_default_group_statement=INSERT INTO card_group (name) VALUES ('No group')
select_group_table_query=SELECT * FROM card_group
insert_into_group_table_statement=INSERT INTO card_group (name) VALUES (?)
delete_from_group_table_statement=DELETE FROM card_group WHERE id = ?
update_card_group_id_statement=UPDATE card SET group_id = ? WHERE id = ?
select_card_by_group_query=SELECT * FROM card WHERE group_id = ?